# Завдання 1 коли запустите прогортайте до гори консоль щоб прочитати усе спочатку
# class Materials:
#     def Materials(self):
#         print("                2 * 1 = 2\n\
#                 2 * 2 = 4\n\
#                 2 * 3 = 6\n\
#                 2 * 4 = 8\n\
#                 2 * 5 = 10\n\
#                 2 * 6 = 12\n\
#                 2 * 7 = 14\n\
#                 2 * 8 = 16\n\
#                 2 * 9 = 18\n\
#                 2 * 10 = 20  ")
        
# class  Tasks:
#     def Tasks(self):
#         print("Виріши приклади:")
#         self.a = int(input(" 2 * 1 = "))
#         if self.a != 2:
#             print("Неправильно")
#         else:
#             print("Правильно")

#         self.b = int(input(" 2 * 3 = "))
#         if self.b != 6:
#             print("Неправильно")
#         else:
#             print("Правильно")

#         self.c = int(input(" 2 * 5 = "))
#         if self.c != 10:
#             print("Неправильно")
#         else:
#             print("Правильно")

#         self.d = int(input(" 2 * 7 = "))
#         if self.d != 14:
#             print("Неправильно")
#         else:
#             print("Правильно")

#         self.e = int(input(" 2 * 9 = "))
#         if self.e !=18:
#             print("Неправильно")
#         else:
#             print("Правильно")
    
# class Front_Cover:
#     def Front_Cover(self):
#         print("(Книжка відкрита)")
#         print("               ___________________\n\
#                |                 |\n\
#                |   Математика    |\n\
#                |   2 клас        |\n\
#                |                 |\n\
#                |    2 * 2 = 4    |\n\
#                |                 |\n\
#                |                 |\n\
#                |    2024-2025    |\n\
#                |_________________|")        

# class Back_Cover:
#     def Back_Cover(self):
#         print("(Книжка закрита)")
#         print("               ___________________\n\
#                |                 |\n\
#                |  фіварф івааррі |\n\
#                |  вфаіва гіваів  |\n\
#                |  іва а іваів і  |\n\
#                |                 |\n\
#                |                 |\n\
#                |                 |\n\
#                | @Ukraine_Math24 |\n\
#                |_________________|")      
                        
# class Math_book(Front_Cover, Materials, Tasks, Back_Cover):
#     def __init__(self, name="Book"):
#         self.name = name

#     def read_book(self):
#         super().Front_Cover()
#         super().Materials()
#         super().Tasks()
#         super().Back_Cover()
     
# book = Math_book("Математика 2 клас")

# book.read_book()


# Завдання 2 Нейросіть допомогла була тривога а тема тяжка

import random  # Імпортуємо модуль random для генерації випадкових чисел
class Шифратор:  # Створюємо новий клас з назвою "Шифратор"
    def __init__(self, *args):  # Ініціалізуємо клас з довільною кількістю аргументів
        self.числа = args  # Зберігаємо вхідні числа в атрибуті класу
        self.операції = ['+', '-', '*', '/']  # Створюємо список можливих операцій

    def обчислення(self):  # Створюємо метод для виконання випадкової операції
        op = random.choice(self.операції)  # Вибираємо випадкову операцію
        if op == '+':  # Якщо операція - додавання
            return sum(self.числа)  # Повертаємо суму чисел
        elif op == '-':  # Якщо операція - віднімання
            return self.числа[0] - sum(self.числа[1:])  # Повертаємо різницю першого числа та суми решти
        elif op == '*':  # Якщо операція - множення
            result = 1  # Ініціалізуємо результат як 1
            for num in self.числа:  # Для кожного числа
                result *= num  # Множимо результат на число
            return result  # Повертаємо результат
        elif op == '/':  # Якщо операція - ділення
            try:  # Спробуємо виконати ділення
                result = self.числа[0]  # Ініціалізуємо результат як перше число
                for num in self.числа[1:]:  # Для кожного числа, крім першого
                    result /= num  # Ділимо результат на число
                return result  # Повертаємо результат
            except ZeroDivisionError:  # Якщо виникне помилка ділення на нуль
                return "Помилка: ділення на нуль"  # Повертаємо повідомлення про помилку

    def __str__(self):  # Створюємо метод для перетворення об'єкта в рядок
        return str(self.обчислення())  # Повертаємо результат обчислень як рядок

шифратор = Шифратор(1, 2, 3, 4)  # Створюємо новий об'єкт класу "Шифратор" з числами 1, 2, 3, 4
print(шифратор)  # Виводимо об'єкт, що автоматично викликає метод __str__ і повертає результат обчислень
